@model OnlineClothStore.Models.Product

@{
    ViewBag.Title = "Create";
}

<h2 id="signtitle">Add your Apparels!</h2>

@using (Html.BeginForm("Create", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.ProductName, "Enter Product Name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProductQuantity, "Enter available Quantity", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ProductQuantity, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProductQuantity, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProductPrice, "Enter Price", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ProductPrice, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProductPrice, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProductImage, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.ProductImage, new { htmlAttributes = new { @class = "form-control" } })*@
            <input type="file" name="file" id="file" />
            @Html.ValidationMessageFor(model => model.ProductImage, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CategoryName, "Enter Category Name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.CategoryName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CategoryName, "", new { @class = "text-danger" })*@
            @Html.RadioButtonFor(m => m.CategoryName, "Men")
            @Html.Label("Men")<br />

            @Html.RadioButtonFor(m => m.CategoryName, "Women")
            @Html.Label("Women")<br />

            @Html.RadioButtonFor(m => m.CategoryName, "Unisex")
            @Html.Label("Unisex")<br />
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Enter Email for Verification")
        @*<div class="col-md-10">*@
        @Html.TextBox("VendorEmail")
        @Html.ValidationMessageFor(model => model.VendorId, "", new { @class = "text-danger" })
        @*</div>*@
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Add Product" onclick="check()" class="btn btn-info" />
        </div>
    </div>
    <script type="text/javascript">
        function check() {
            alert("Product Added Successfully!");
        };
    </script>
</div>
}

    <div>
        @Html.ActionLink("Back to Dashboard", "VendorDashboard","Vendors")
    </div>
